<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.sys.dao.OfficeDao">

	<sql id="officeColumns">
		a.id,
		a.parent_id AS "parent.id",
		a.parent_ids,
		a.area_id AS "area.id",
		a.code,
		a.name,
		a.sort,
		a.type,
		a.grade,
		a.address, 
		a.zip_code, 
		a.master, 
		a.phone, 
		a.fax, 
		a.email, 
		a.remarks,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS "updateBy.id",
		a.update_date,
		a.del_flag,
		a.item_no AS "itemNo",
		a.useable AS useable,
		a.primary_person AS "primaryPerson.id",
		a.deputy_person AS "deputyPerson.id",
		p.name AS "parent.name",
		ar.name AS "area.name",
		ar.parent_ids AS "area.parentIds",
		pp.name AS "primaryPerson.name",
		dp.name AS "deputyPerson.name"
	</sql>
	
	<sql id="officeJoins">
		LEFT JOIN sys_office p ON p.id = a.parent_id
		LEFT JOIN sys_area ar ON ar.id = a.area_id
		LEFT JOIN sys_user pp ON pp.id = a.primary_person
		LEFT JOIN sys_user dp ON dp.id = a.deputy_person
    </sql>
	
	<select id="get" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		OR a.id = #{currentUser.office.id}
		ORDER BY a.code
	</select>

	<!--<select id="findEvalList" resultType="Office">
		SELECT
		<include refid="officeColumns"/>,
		SUM(se.task_count) AS taskCount,
		SUM(se.bug_count) AS bugCount,
		SUM(se.good) AS goodCount,
		SUM(se.bad) AS badCount,
		SUM(se.bug_count)/SUM(se.task_count) AS bugPoint,
		SUM(se.efficiency) / COUNT(se.efficiency) AS AvgEfficiency
		FROM sys_office a
		<include refid="officeJoins"/>
		LEFT JOIN staff_eval se ON se.eval_office_id = a.id
		AND se.del_flag = '0'
		AND se.start_data &gt; #{beginDate}
		AND se.end_data &lt; #{endDate}
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="office != null and office.id != null and office.id != ''">
			AND a.parent_id = #{office.id}
		</if>
		AND a.type = 3
		&lt;!&ndash; 数据范围过滤 &ndash;&gt;
		${sqlMap.dsf}
		OR a.id = #{currentUser.office.id}
		GROUP BY a.id
		HAVING a.type = '3'
		<if test="goodCount != null">
			AND SUM(se.good) &gt;= #{goodCount}
		</if>
		<if test="badCount != null">
			AND SUM(se.bad) &gt;= #{badCount}
		</if>
		<if test="bugCount != null">
			AND SUM(se.bug_count) &gt;= #{bugCount}
		</if>
		<if test="taskCount != null">
			AND SUM(se.task_count) >= #{taskCount}
		</if>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.code
			</otherwise>
		</choose>
	</select>-->

	<select id="findEvalGroupList" resultType="OfficeEval">
		SELECT
		<include refid="officeColumns"/>,
		COUNT(se.id) AS evalCount,
		SUM(se.task_count) AS taskCount,
		SUM(se.bug_count) AS bugCount,
		SUM(se.good) AS goodCount,
		SUM(se.bad) AS badCount,
		SUM(se.bug_count)/SUM(se.task_count) AS bugPoint,
		SUM(se.efficiency) AS AvgEfficiency
		FROM sys_office a
		<include refid="officeJoins"/>
		LEFT JOIN staff_eval se ON se.eval_office_id IN (
			SELECT
				aa.id
			FROM
				sys_office aa
			LEFT JOIN sys_office pp ON pp.id = aa.parent_id
			WHERE
				aa.del_flag = '0'
			AND (
				aa.id = a.id
					OR aa.parent_ids LIKE CONCAT((
						SELECT parent_ids FROM sys_office bb WHERE bb.id = a.id),
						(a.id),
						(',%'))
				OR aa.id IS NULL
			)
			OR aa.id = a.id
			)
		AND se.del_flag = '0'
		AND se.start_data &gt;= #{beginDate}
		AND se.end_data &lt;= #{endDate}
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="id != null and id != ''">
			AND (a.id = #{id} OR a.parent_ids LIKE
			<if test="dbName == 'oracle'">'%,'||#{id}||',%')</if>
			<if test="dbName == 'mssql'">'%,'+#{id}+',%')</if>
			<if test="dbName == 'mysql'">CONCAT('%,', #{id}, ',%'))</if>
		</if>
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		<!-- OR a.id = #{currentUser.office.id} -->
		GROUP BY a.id
		HAVING 1=1
		<if test="type != null and type != ''">
			AND a.type = #{type}
		</if>
		<if test="goodCount != null">
			AND SUM(se.good) &gt;= #{goodCount}
		</if>
		<if test="badCount != null">
			AND SUM(se.bad) &gt;= #{badCount}
		</if>
		<if test="bugCount != null">
			AND SUM(se.bug_count) &gt;= #{bugCount}
		</if>
		<if test="taskCount != null">
			AND SUM(se.task_count) >= #{taskCount}
		</if>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.code
			</otherwise>
		</choose>
	</select>
			
	<select id="findAllList" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY a.code
	</select>
	
	<select id="findByParentIdsLike" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} AND a.parent_ids LIKE #{parentIds}
		ORDER BY a.code
	</select>
	
	<insert id="insert">
		INSERT INTO sys_office(
			id, 
			parent_id, 
			parent_ids, 
			area_id, 
			code, 
			name, 
			sort, 
			type, 
			grade, 
			address, 
			zip_code, 
			master, 
			phone, 
			fax, 
			email, 
			create_by, 
			create_date, 
			update_by, 
			update_date, 
			remarks, 
			del_flag,
			item_no,
			useable,
			primary_person,
			deputy_person
		) VALUES (
			#{id}, 
			#{parent.id}, 
			#{parentIds}, 
			#{area.id}, 
			#{code}, 
			#{name}, 
			#{sort}, 
			#{type}, 
			#{grade}, 
			#{address}, 
			#{zipCode}, 
			#{master}, 
			#{phone}, 
			#{fax}, 
			#{email}, 
			#{createBy.id}, 
			#{createDate}, 
			#{updateBy.id}, 
			#{updateDate}, 
			#{remarks}, 
			#{delFlag},
			#{itemNo},
			#{useable},
			#{primaryPerson.id},
			#{deputyPerson.id}
		)
	</insert>
	
	<update id="update">
		UPDATE sys_office SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}, 
			area_id = #{area.id}, 
			code = #{code}, 
			name = #{name}, 
			type = #{type}, 
			grade = #{grade}, 
			address = #{address}, 
			zip_code = #{zipCode}, 
			master = #{master}, 
			phone = #{phone}, 
			fax = #{fax}, 
			email = #{email}, 
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			remarks = #{remarks},
			item_no = #{itemNo},
			useable=#{useable},
			primary_person=#{primaryPerson.id},
			deputy_person=#{deputyPerson.id}
		WHERE id = #{id}
	</update>
	
	<update id="updateParentIds">
		UPDATE sys_office SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE sys_office SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id} OR parent_ids LIKE 
					<if test="dbName == 'oracle'">'%,'||#{id}||',%'</if>
					<if test="dbName == 'mssql'">'%,'+#{id}+',%'</if>
					<if test="dbName == 'mysql'">CONCAT('%,', #{id}, ',%')</if>
	</update>
	
</mapper>
